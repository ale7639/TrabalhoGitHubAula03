name: 5 - Múltiplos Passos (Sequencial e Paralelo)

on:
  push:
    branches:
      - main

jobs:
  # JOB 1: Passos que rodam em sequência
  passos-em-sequencia:
    runs-on: ubuntu-latest
    steps:
      - name: Passo 1 - Checkout do código
        uses: actions/checkout@v3

      - name: Passo 2 - Mostrar data e usuário
        run: |
          echo "Data: $(date)"
          echo "Usuário: ${{ github.actor }}"

      - name: Passo 3 - Contar arquivos HTML, CSS e JS
        run: |
          HTML_COUNT=$(find . -type f -name "*.html" | wc -l)
          CSS_COUNT=$(find . -type f -name "*.css" | wc -l)
          JS_COUNT=$(find . -type f -name "*.js" | wc -l)
          echo "Arquivos enviados:"
          echo "  - HTML: $HTML_COUNT"
          echo "  - CSS: $CSS_COUNT"
          echo "  - JS: $JS_COUNT"

  # JOB 2: Passos que rodam em paralelo (cada 'job' é independente)
  passos-em-paralelo:
    runs-on: ubuntu-latest
    # Este job precisa do job anterior para começar
    needs: passos-em-sequencia
    steps:
      - run: echo "Este é o job de introdução para os passos paralelos."

  contar-html:
    runs-on: ubuntu-latest
    needs: passos-em-paralelo
    steps:
      - uses: actions/checkout@v3
      - name: Contar HTML
        run: |
          echo "HTMLs: $(find . -type f -name '*.html' | wc -l)"

  contar-css:
    runs-on: ubuntu-latest
    needs: passos-em-paralelo
    steps:
      - uses: actions/checkout@v3
      - name: Contar CSS
        run: |
          echo "CSSs: $(find . -type f -name '*.css' | wc -l)"

  contar-js:
    runs-on: ubuntu-latest
    needs: passos-em-paralelo
    steps:
      - uses: actions/checkout@v3
      - name: Contar JS
        run: |
          echo "JSs: $(find . -type f -name '*.js' | wc -l)"